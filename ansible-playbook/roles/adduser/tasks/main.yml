---
- name: add users with default password (pass)
  become: yes
  user:
    name: '{{ item.name }}'
    shell: /bin/bash
    createhome: yes
    groups: '{{ item.groups }}'
  with_items: '{{ adduser.users }}'
  when: item.change

- name: set authorized key
  become: yes
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ lookup('file', 'ssh/{{ item.name }}.pub') }}"
    path: /home/{{ item.name }}/.ssh/authorized_keys
    state: present
  with_items: "{{ adduser.users }}"
  when: item.change

- name: "Add user item.name to sudo"
  become: yes
  lineinfile:
    path: "/etc/sudoers.d/{{sudo_file}}"
    line:  "{{ item.1 }}"
    state: present
    mode: 0440
    create: yes
  validate: 'visudo -cf %s'
  with_subelements:
    - "{{ adduser.users }}"
    - sudo.line
  when: item.0.change and item.0.sudo.change

- name: remove user
  become: yes
  user:
    name: '{{ item }}'
    state: absent
    remove: yes
    force: yes
  with_items: '{{ rmuser.users }}'
  when: rmuser is defined


- name: "remove from sudoers file {{sudo_file}}"
  become: yes
  lineinfile:
    path: "/etc/sudoers.d/{{sudo_file}}"
    regexp: "^{{ item }}\\s"
    state: absent
    mode: 0440
  validate: 'visudo -cf %s'
  with_items: '{{ rmuser.users }}'
  when: rmuser is defined


- name: lock user
  become: yes
  user:
    name: '{{ item }}'
    password_lock: yes
  with_items: '{{ lock.users }}'
  when: lock is defined
#...